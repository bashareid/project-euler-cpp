/*
The nth term of the sequence of triangle numbers is given by, tn = Â½n(n+1); so the first ten triangle numbers are:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

By converting each letter in a word to a number corresponding to its alphabetical position and adding these values we form a word value. For example, the word value for SKY is 19 + 11 + 25 = 55 = t10. If the word value is a triangle number then we shall call the word a triangle word.

Using words.txt (right click and 'Save Link/Target As...'), a 16K text file containing nearly two-thousand common English words, how many are triangle words?
*/

#include<iostream>
#include<algorithm>
#include<fstream>
#include<cmath>
#include<string>
#include<vector>
#include <bits/stdc++.h> 
#include<sstream>
using namespace std;

bool  triangle(string name){
  int sumof = 0; 
  int size = name.size();
  char char_array[size];
  strcpy(char_array , name.c_str()); 
  for(int alpha = 0; alpha < size; alpha++){
    sumof += char_array[alpha] - 'A' + 1;
  }
  int n = sqrt(2 * sumof);
  int check_if = (n * (n + 1)) / 2;
  if(check_if == sumof){
    return true;
  }
  return false;
}

vector<string> read_words(const string& filename){
 vector<string> value_words;
 ifstream read;
 string word;
 read.open(filename);
  while(getline(read, word, ',')){ 
   value_words.push_back(word.substr(1,word.size() -2));
  }
   std::sort(value_words.begin(), value_words.end());
  return value_words;
}

int main() {
  int total = 0;
  const auto& value_words = read_words("words.txt");
  for(string n : value_words){
   if(triangle(n)){
     total += 1;
   }
  }
  cout << total <<endl;
   return 0;
}
